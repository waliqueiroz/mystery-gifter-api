// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/waliqueiroz/mystery-gifter-api/internal/domain (interfaces: IdentityGenerator)
//
// Generated by this command:
//
//	mockgen -destination mock_domain/identity_generator.go . IdentityGenerator
//

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIdentityGenerator is a mock of IdentityGenerator interface.
type MockIdentityGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockIdentityGeneratorMockRecorder
	isgomock struct{}
}

// MockIdentityGeneratorMockRecorder is the mock recorder for MockIdentityGenerator.
type MockIdentityGeneratorMockRecorder struct {
	mock *MockIdentityGenerator
}

// NewMockIdentityGenerator creates a new mock instance.
func NewMockIdentityGenerator(ctrl *gomock.Controller) *MockIdentityGenerator {
	mock := &MockIdentityGenerator{ctrl: ctrl}
	mock.recorder = &MockIdentityGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIdentityGenerator) EXPECT() *MockIdentityGeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockIdentityGenerator) Generate() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockIdentityGeneratorMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockIdentityGenerator)(nil).Generate))
}
